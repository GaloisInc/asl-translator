# This CI configuration is inspired by
#
# https://kodimensional.dev/github-actions
#
# It builds with a majority of the latest compiler releases from each major GHC
# revision on Linux and builds macOS and Windows against the latest GHC.
name: CI Matrix

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

# The CACHE_VERSION can be updated to force the use of a new cache if
# the current cache contents become corrupted/invalid.  This can
# sometimes happen when (for example) the OS version is changed but
# older .so files are cached, which can have various effects
# (e.g. cabal complains it can't find a valid version of the "happy"
# tool).
env:
  CACHE_VERSION: 2

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: ['9.2.8', '9.4.5', '9.6.2']
        cabal: ['3.10.1.0']
        os: [ubuntu-latest, macOS-latest]
        exclude:
          - os: macOS-latest
            ghc: 9.2.8
          - os: macOS-latest
            ghc: 9.4.5

    name: GHC ${{ matrix.ghc }} on ${{ matrix.os }} asl-translator

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'

    - uses: haskell/actions/setup@v1
      id: setup-haskell
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache/restore@v3
      name: Restore cabal store cache
      with:
        path: |
          ${{ steps.setup-haskell.outputs.cabal-store }}
          dist-newstyle
        key: |
          ${{ env.CACHE_VERSION }}-cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-${{ github.ref }}
        restore-keys: |
          ${{ env.CACHE_VERSION }}-cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-

    - name: Build
      run: |
        cp cabal.project.newbuild cabal.project
        cabal v2-configure pkg:asl-translator --write-ghc-environment-files=always -j1 --enable-tests
        cabal v2-build pkg:asl-translator

    - name: Install Solvers
      if: runner.os == 'Linux'
      run: .github/ci.sh install_system_deps
      env:
        Z3_VERSION: "4.8.8"
        YICES_VERSION: "2.6.2"
        CVC4_VERSION: "4.1.8"

    - name: Test
      if: runner.os == 'Linux'
      run: |
        cabal v2-test pkg:asl-translator

    - uses: actions/cache/save@v3
      name: Save cabal store cache
      if: always()
      with:
        path: |
          ${{ steps.setup-haskell.outputs.cabal-store }}
          dist-newstyle
        key: |
          ${{ env.CACHE_VERSION }}-cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-${{ github.ref }}
          ${{ env.CACHE_VERSION }}-cabal-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles(format('cabal.GHC-{0}.config', matrix.ghc)) }}-
